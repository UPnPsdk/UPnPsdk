name: CI macOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job: Configure and build
  #-------------------------
  Configure_and_build:
    name: Configure and build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macOS-10.15, macOS-latest ]
        googletest: [ '', '-D UPNPLIB_WITH_GOOGLETEST=ON' ]
        shared: [ '', '-D GTESTS_WITH_SHARED_LIBS=ON' ]
        buildtype: [ 'Release', 'Debug' ]
      fail-fast: false

    steps:
    # Steps to build and test the core upnplib
      - uses: actions/checkout@v2

      - name: Configure
        run: cmake -S . -B build -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 ${{matrix.googletest}} ${{matrix.shared}} -D CMAKE_BUILD_TYPE=${{matrix.buildtype}} --log-level=DEBUG

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON') && (matrix.shared == '')
        name: Check gtest library files, static
        run: |
          ls ./build/lib/libgtest.a
          ls ./build/lib/libgmock.a
          ls ./build/lib/libgtest_main.a
          ls ./build/lib/libgmock_main.a

      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON') && (matrix.shared == '-D GTESTS_WITH_SHARED_LIBS=ON')
        name: Check gtest library files, shared
        run: |
          ls ./build/lib/libgtest.dylib
          ls ./build/lib/libgmock.dylib
          ls ./build/lib/libgtest_main.dylib
          ls ./build/lib/libgmock_main.dylib

      - if: matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON'
        name: Run simple gtest
        # This gtest is always built with GoogleTest
        run: ./build/gtests/test_simple

      - if: matrix.buildtype != 'Debug'
        name: Verify if NO Debug info
        # These two libraries are always built
        run: |
          # objdump does not work (this way?) on macOS
          #objdump [-a] -g upnp/build/lib/libupnplib.dylib | grep --ignore-case --max-count=1 --invert-match "Contents of the .debug_info section"
          ls ./build/lib/libpupnp_native.dylib
          ls ./build/lib/libupnplib_compa.dylib
          ls ./build/lib/libupnplib_native.dylib
          ls ./build/lib/libpupnp_native.a
          ls ./build/lib/libupnplib_compa.a
          ls ./build/lib/libupnplib_native.a

      - if: matrix.buildtype == 'Debug'
        name: Verify if Debug info
        # These two libraries are always built
        run: |
          # objdump does not work (this way?) on macOS
          #objdump [-a] -g upnp/build/lib/libupnplib.dylib | grep --ignore-case --max-count=1 "Contents of the .debug_info section"
          ls ./build/lib/libpupnp_native.dylib
          ls ./build/lib/libupnplib_compa.dylib
          ls ./build/lib/libupnplib_native.dylib
          ls ./build/lib/libpupnp_native.a
          ls ./build/lib/libupnplib_compa.a
          ls ./build/lib/libupnplib_native.a

      - name: Run upnplib info program
        # This program is always built
        run: ./build/bin/upnplibInfo_shared
