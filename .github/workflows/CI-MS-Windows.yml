name: CI Microsoft Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job: Run testsuite of the pthreads4w library
  #---------------------------------------------
  test-pthreads4w:
    name: Run testsuite of pthreads4w
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-2016, windows-latest ]
      fail-fast: false

    steps:
    # Step building the pthreads4w library
      - uses: actions/checkout@v2

      - if: matrix.os == 'windows-2016'
        name: Use MS Windows 32 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win32

      - if: matrix.os == 'windows-latest'
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Configure pthreads4w with tests
        run: cmake -S . -B build -D PT4W_BUILD_TESTING=ON -D CMAKE_BUILD_TYPE=MinSizeRel

      - name: Append build directory to path
        run: |
          # The modification is first seen at the next step!
          echo "${{github.workspace}}\build\_deps\pthreads4w-build" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Run pthreads4w testsuite
        run: |
          cd build\_deps\pthreads4w-build\tests
          ctest -C MinSizeRel -V


  # Job: Configure and build with Visual Studio
  #--------------------------------------------
  Configure_and_build:
    name: Build with Visual Studio
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-2016, windows-latest ]
        googletest: [ '', '-D UPNP_GOOGLETEST=ON' ]
        shared: [ '', '-D BUILD_SHARED_LIBS=ON' ]
        buildtype: [ 'MinSizeRel', 'Debug' ]
      fail-fast: false

    steps:
    # Step building the core upnplib
      - uses: actions/checkout@v2

      - if: matrix.os == 'windows-2016'
        name: Use MS Windows 32 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win32

      - if: matrix.os == 'windows-latest'
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Configure
        run: cmake -S . -B build ${{matrix.googletest}} ${{matrix.shared}} -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.buildtype != 'Debug')
        name: GTest link libraries build with Visual Studio
        run: |
          ls ./build/lib/${{matrix.buildtype}}/gtest.lib
          ls ./build/lib/${{matrix.buildtype}}/gmock.lib
          ls ./build/lib/${{matrix.buildtype}}/gtest_main.lib
          ls ./build/lib/${{matrix.buildtype}}/gmock_main.lib

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.buildtype == 'Debug')
        name: GTest link libraries build with Visual Studio Debug
        run: |
          ls ./build/lib/${{matrix.buildtype}}/gtestd.lib
          ls ./build/lib/${{matrix.buildtype}}/gmockd.lib
          ls ./build/lib/${{matrix.buildtype}}/gtest_maind.lib
          ls ./build/lib/${{matrix.buildtype}}/gmock_maind.lib

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON') && (matrix.buildtype != 'Debug')
        name: GTest .dll libraries build with Visual Studio
        run: |
          ls ./build/bin/${{matrix.buildtype}}/gtest.dll
          ls ./build/bin/${{matrix.buildtype}}/gmock.dll
          ls ./build/bin/${{matrix.buildtype}}/gtest_main.dll
          ls ./build/bin/${{matrix.buildtype}}/gmock_main.dll
          ls ./gtests/build/${{matrix.buildtype}}/gtest.dll
          ls ./gtests/build/${{matrix.buildtype}}/gmock.dll
          ls ./gtests/build/${{matrix.buildtype}}/gtest_main.dll
          ls ./gtests/build/${{matrix.buildtype}}/gmock_main.dll

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON') && (matrix.buildtype == 'Debug')
        name: GTest .dll libraries build with Visual Studio Debug
        run: |
          ls ./build/bin/${{matrix.buildtype}}/gtestd.dll
          ls ./build/bin/${{matrix.buildtype}}/gmockd.dll
          ls ./build/bin/${{matrix.buildtype}}/gtest_maind.dll
          ls ./build/bin/${{matrix.buildtype}}/gmock_maind.dll
          ls ./gtests/build/${{matrix.buildtype}}/gtestd.dll
          ls ./gtests/build/${{matrix.buildtype}}/gmockd.dll
          ls ./gtests/build/${{matrix.buildtype}}/gtest_maind.dll
          ls ./gtests/build/${{matrix.buildtype}}/gmock_maind.dll

      - if: matrix.googletest == '-D UPNP_GOOGLETEST=ON'
        name: Run simple gtest
        run: ./gtests/build/${{matrix.buildtype}}/test_simple.exe

      - name: Run static test program
        run: ./upnp/build/${{matrix.buildtype}}/upnplibStatic.exe

      - name: Run shared test program
        run: ./upnp/build/${{matrix.buildtype}}/upnplib.exe


  # Job: Configure and build with NMake
  #------------------------------------
  Configure_and_build_NMake:
    name: Build with NMake
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-2016, windows-latest ]
        googletest: [ '', '-D UPNP_GOOGLETEST=ON' ]
        shared: [ '', '-D BUILD_SHARED_LIBS=ON' ]
        buildtype: [ 'MinSizeRel', 'Debug' ]
      fail-fast: false

    steps:
    # Step building the core upnplib
      - uses: actions/checkout@v2

      - if: matrix.os == 'windows-2016'
        name: Use MS Windows 32 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win32

      - if: matrix.os == 'windows-latest'
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Configure
        run: cmake -S . -B build -G "NMake Makefiles" ${{matrix.googletest}} ${{matrix.shared}} -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.buildtype != 'Debug')
        name: GTest link libraries build with NMake
        run: |
          ls ./build/lib/gtest.lib
          ls ./build/lib/gmock.lib
          ls ./build/lib/gtest_main.lib
          ls ./build/lib/gmock_main.lib

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.buildtype == 'Debug')
        name: GTest link libraries build with NMake Debug
        run: |
          ls ./build/lib/gtestd.lib
          ls ./build/lib/gmockd.lib
          ls ./build/lib/gtest_maind.lib
          ls ./build/lib/gmock_maind.lib

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON') && (matrix.buildtype != 'Debug')
        name: GTest .dll libraries build with NMake
        run: |
          ls ./build/bin/gtest.dll
          ls ./build/bin/gmock.dll
          ls ./build/bin/gtest_main.dll
          ls ./build/bin/gmock_main.dll
          ls ./gtests/build/gtest.dll
          ls ./gtests/build/gmock.dll
          ls ./gtests/build/gtest_main.dll
          ls ./gtests/build/gmock_main.dll

      - if: (matrix.googletest == '-D UPNP_GOOGLETEST=ON') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON') && (matrix.buildtype == 'Debug')
        name: GTest .dll libraries build with NMake Debug
        run: |
          ls ./build/bin/gtestd.dll
          ls ./build/bin/gmockd.dll
          ls ./build/bin/gtest_maind.dll
          ls ./build/bin/gmock_maind.dll
          ls ./gtests/build/gtestd.dll
          ls ./gtests/build/gmockd.dll
          ls ./gtests/build/gtest_maind.dll
          ls ./gtests/build/gmock_maind.dll

      - if: matrix.googletest == '-D UPNP_GOOGLETEST=ON'
        name: Run simple gtest
        run: ./gtests/build/test_simple.exe

      - name: Run static test program
        run: ./upnp/build/upnplibStatic.exe

      - name: Run shared test program
        run: ./upnp/build/upnplib.exe
