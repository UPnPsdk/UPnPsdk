name: CI ctests

on:
  push:
    branches: [ dev, gtests, workflow_dispatch ]
  pull_request:
    branches: [ dev, gtests, workflow_dispatch ]

jobs:
  # Job: Run gtests
  #----------------
  Run_gtests:
    name: Run gtests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        shared: [ '', '-D BUILD_SHARED_LIBS=ON' ]
      fail-fast: false

    steps:
    # Step building gtests
      - uses: actions/checkout@v2

      - if: matrix.os == 'windows-latest'
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - if: runner.os == 'Linux'
        name: Configure Linux
        run: cmake -S . -B build -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 -D UPNPLIB_WITH_GOOGLETEST=ON ${{matrix.shared}} -D CMAKE_BUILD_TYPE=Release

      - if: runner.os == 'macOS'
        name: Configure macOS
        #run: cmake -S . -B build -D CMAKE_C_COMPILER=$(brew --prefix llvm)/bin/clang -D CMAKE_CXX_COMPILER=$(brew --prefix llvm)/bin/clang++ -D UPNPLIB_WITH_GOOGLETEST=ON ${{matrix.shared}} -D CMAKE_BUILD_TYPE=Release
        run: cmake -S . -B build -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 -D UPNPLIB_WITH_GOOGLETEST=ON ${{matrix.shared}} -D CMAKE_BUILD_TYPE=Release

      - if: runner.os == 'Windows'
        name: Configure Windows
        run: cmake -S . -B build -D UPNPLIB_WITH_GOOGLETEST=ON ${{matrix.shared}} -D CMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - if: runner.os != 'Windows'
        name: Run gtests not on MS Windows
        run: |
          cd ./build/gtests
          ctest --output-on-failure

      - if: runner.os == 'Windows'
        name: Run gtests on MS Windows
        run: |
          cd ./build/gtests
          ctest -C Release --output-on-failure

  # Job: Run build tests
  #---------------------
  Run_build_tests:
    name: Run build tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        shared: [ '', '-D BUILD_SHARED_LIBS=ON' ]
      fail-fast: false

    steps:
    # Step building tests
      - uses: actions/checkout@v2

      - if: matrix.os == 'windows-latest'
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - if: runner.os == 'Linux'
        name: Configure Linux
        run: cmake -S . -B build -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 -D CMAKE_BUILD_TYPE=Release

      - if: runner.os == 'macOS'
        name: Configure macOS
        run: cmake -S . -B build -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 -D CMAKE_BUILD_TYPE=Release

      - if: runner.os == 'Windows'
        name: Configure Windows
        run: cmake -S . -B build -D CMAKE_BUILD_TYPE=Release

      - name: Run build tests
        run: |
          cd ./build
          # --build-config is needed for MS Windows but ignored.
          # The settings within the test source are used.
          ctest --build-config Release --tests-regex ^ctest_build_ --output-on-failure --stop-on-failure
