name: Build

on: [push, pull_request]

jobs:
#  linux:
#    name: Build (${{ matrix.os }}) - ${{ matrix.conf }}
#    runs-on: ${{ matrix.os }}
#
#    strategy:
#      matrix:
#        os: [uabuntu-20.04]
#        conf: [Release]
#      fail-fast: false
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Configure
#        run: >
#          cmake
#          -S .
#          -B build
#          -D CMAKE_BUILD_TYPE=${{ matrix.conf }}
#          -D GOOGLETEST=ON
#          -D BUILD_TESTING=OFF
#          -D client=OFF
#          -D device=OFF
#          -D gena=OFF
#          -D ipv6=OFF
#          -D optssdp=OFF
#          -D samples=OFF
#          -D scriptsupport=OFF
#          -D soap=OFF
#          -D ssdp=OFF
#          -D tools=OFF
#
#      - name: Build
#        run: cmake --build build

  windows:
    name: Build (${{ matrix.os }})  - ${{ matrix.conf }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-2019]
        conf: [Release]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install build tools
        run: |
          choco install ninja vswhere

      - name: Build
        run: |
          $installationPath = vswhere.exe -prerelease -latest -property installationPath
          if ($installationPath -and (test-path "$installationPath\Common7\Tools\vsdevcmd.bat")) {
            & "${env:COMSPEC}" /s /c "`"$installationPath\Common7\Tools\vsdevcmd.bat`" -no_logo && set" | foreach-object {
              $name, $value = $_ -split '=', 2
              set-content env:\"$name" $value
            }
          }
          cmake -G Ninja -S .  -B build -D CMAKE_BUILD_TYPE=${{ matrix.conf }} -D GOOGLETEST=ON -D BUILD_TESTING=OFF -D client=OFF -D device=OFF -D gena=OFF -D ipv6=OFF -D optssdp=OFF -D samples=OFF -D scriptsupport=OFF -D soap=OFF -D ssdp=OFF -D tools=OFF
          cmake --build build
