name: CI Microsoft Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job: Configure and build with Visual Studio
  #--------------------------------------------
  Configure_and_build:
    name: Build with Visual Studio
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-2019, windows-2022 ]
        googletest: [ '', '-D UPNPLIB_WITH_GOOGLETEST=ON' ]
        shared: [ '', '-D BUILD_SHARED_LIBS=ON' ]
        buildtype: [ 'Release', 'Debug' ]
      fail-fast: false

    steps:
    # Step building the core upnplib
      - uses: actions/checkout@v2

      - if: matrix.os == 'windows-2019'
        name: Use MS Windows 32 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win32

      - if: matrix.os == 'windows-2022'
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - if: matrix.os == 'windows-2019'
        name: Configure 32 bit
        run: cmake -S . -B build -A Win32 ${{matrix.googletest}} ${{matrix.shared}} -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}

      - if: matrix.os == 'windows-2022'
        name: Configure 64 bit
        run: cmake -S . -B build ${{matrix.googletest}} ${{matrix.shared}} -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON')
        name: GTest link libraries build with Visual Studio
        run: |
          ls ./build/lib/${{matrix.buildtype}}/gtest.lib
          ls ./build/lib/${{matrix.buildtype}}/gmock.lib
          ls ./build/lib/${{matrix.buildtype}}/gtest_main.lib
          ls ./build/lib/${{matrix.buildtype}}/gmock_main.lib

      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON')
        name: GTest .dll libraries build with Visual Studio
        run: |
          ls ./build/bin/${{matrix.buildtype}}/gtest.dll
          ls ./build/bin/${{matrix.buildtype}}/gmock.dll
          ls ./build/bin/${{matrix.buildtype}}/gtest_main.dll
          ls ./build/bin/${{matrix.buildtype}}/gmock_main.dll
          ls $env:SYSTEMROOT/System32/gtest.dll
          ls $env:SYSTEMROOT/System32/gmock.dll
          ls $env:SYSTEMROOT/System32/gtest_main.dll
          ls $env:SYSTEMROOT/System32/gmock_main.dll
          #ls ./build/gtests/${{matrix.buildtype}}/gtest.dll
          #ls ./build/gtests/${{matrix.buildtype}}/gmock.dll
          #ls ./build/gtests/${{matrix.buildtype}}/gtest_main.dll
          #ls ./build/gtests/${{matrix.buildtype}}/gmock_main.dll

      # On MS Windows 2019 gtests with shared libraries fail with a vague
      # system error "Exit code 0xc0000135", so we exlude this test. On
      # 'windows-2022' this bug is fixed and the test runs.
      # - if: matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON'
      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON') && !((matrix.os == 'windows-2019') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON'))
        name: Run simple gtest
        #run: ./build/gtests/${{matrix.buildtype}}/test_simple.exe
        run: cd .\build\gtests\; ctest -C ${{matrix.buildtype}} -R 'ctest_simple'

      - name: Run static test program
        run: ./build/core/${{matrix.buildtype}}/upnplibInfo.exe

      - name: Run shared test program
        run: ./build/core/${{matrix.buildtype}}/upnplibInfo_shared.exe


  # Job: Configure and build with NMake
  #------------------------------------
  Configure_and_build_NMake:
    name: Build with NMake
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-2019, windows-2022 ]
        googletest: [ '', '-D UPNPLIB_WITH_GOOGLETEST=ON' ]
        shared: [ '', '-D BUILD_SHARED_LIBS=ON' ]
        buildtype: [ 'Release', 'Debug' ]
      fail-fast: false

    steps:
    # Step building the core upnplib
      - uses: actions/checkout@v2

      - if: matrix.os == 'windows-2019'
        name: Use MS Windows 32 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win32

      - if: matrix.os == 'windows-2022'
        name: Use MS Windows 64 bit
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Configure
        run: cmake -S . -B build -G "NMake Makefiles" ${{matrix.googletest}} ${{matrix.shared}} -D CMAKE_BUILD_TYPE=${{matrix.buildtype}}

      - name: Build
        run: cmake --build build --config ${{matrix.buildtype}}

      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON')
        name: GTest link libraries build with NMake
        run: |
          ls ./build/lib/gtest.lib
          ls ./build/lib/gmock.lib
          ls ./build/lib/gtest_main.lib
          ls ./build/lib/gmock_main.lib

      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON')
        name: GTest .dll libraries build with NMake
        run: |
          ls ./build/bin/gtest.dll
          ls ./build/bin/gmock.dll
          ls ./build/bin/gtest_main.dll
          ls ./build/bin/gmock_main.dll
          ls $env:SYSTEMROOT/System32/gtest.dll
          ls $env:SYSTEMROOT/System32/gmock.dll
          ls $env:SYSTEMROOT/System32/gtest_main.dll
          ls $env:SYSTEMROOT/System32/gmock_main.dll
          #ls ./build/gtests/gtest.dll
          #ls ./build/gtests/gmock.dll
          #ls ./build/gtests/gtest_main.dll
          #ls ./build/gtests/gmock_main.dll

      # On MS Windows 2019 gtests with shared libraries fail with a vague
      # system error "Exit code 0xc0000135", so we exlude this test. On
      # 'windows-2022' this bug is fixed and the test runs.
      # - if: matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON'
      - if: (matrix.googletest == '-D UPNPLIB_WITH_GOOGLETEST=ON') && !((matrix.os == 'windows-2019') && (matrix.shared == '-D BUILD_SHARED_LIBS=ON'))
        name: Run simple gtest
        #run: ./build/gtests/test_simple.exe
        run: cd .\build\gtests\; ctest -R 'ctest_simple'

      - name: Run static test program
        run: ./build/core/upnplibInfo.exe

      - name: Run shared test program
        run: ./build/core/upnplibInfo_shared.exe
